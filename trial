import re
from collections import defaultdict


logfile = "logfile.txt"


requests_per_day = defaultdict(int)
requests_per_week = defaultdict(int)
requests_per_month = defaultdict(int)
status_codes = defaultdict(int)
file_requests = defaultdict(int)


file = open("logfile.txt")
   
match = re.match(r'^(\S+) - - \[(\d+/\w+/\d+):', log_entry)
if match:
        ip_address, date = match.groups()
        day, month, year = date.split('/')
        week_number = f"{year}-{month}-{day}" 
        requests_per_day[date] += 1
        requests_per_week[week_number] += 1
        requests_per_month[f"{year}-{month}"] += 1

    status_code_match = re.search(r'\s(\d{3})\s', log_entry) if status_code_match:
        status_code = status_code_match.group(1)
        status_codes[status_code] += 1

file_match = re.search(r'GET\s+(/[^?\s]+)', log_entry)
if file_match:
        requested_file = file_match.group(1)
        file_requests[requested_file] += 1


total_requests = sum(requests_per_day.values())
total_successful_requests = total_requests - sum(status_codes.get(code, 0) for code in ('404', '4xx'))
total_redirected_requests = sum(status_codes.get(code, 0) for code in ('301', '302', '3xx'))
percentage_not_successful = (total_requests - total_successful_requests) / total_requests * 100
percentage_redirected = (total_redirected_requests / total_requests) * 100


most_requested_file = max(file_requests, key=file_requests.get)
least_requested_file = min(file_requests, key=file_requests.get)


print("Requests per day:")
for date, count in requests_per_day.items():
    print(f"{date}: {count}")

print("\nRequests per week:")
for week, count in requests_per_week.items():
    print(f"Week {week}: {count}")

print("\nRequests per month:")
for month, count in requests_per_month.items():
    print(f"{month}: {count}")

print(f"\nPercentage of unsuccessful requests: {percentage_not_successful:.2f}%")
print(f"Percentage of redirected requests: {percentage_redirected:.2f}%")
print(f"Most requested file: {most_requested_file}")
print(f"Least requested file: {least_requested_file}")
